<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网安课程 on 子春廿一</title>
    <link>http://localhost:1313/categories/%E7%BD%91%E5%AE%89%E8%AF%BE%E7%A8%8B/</link>
    <description>Recent content in 网安课程 on 子春廿一</description>
    <generator>Hugo</generator>
    <language>cn</language>
    <lastBuildDate>Tue, 10 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E7%BD%91%E5%AE%89%E8%AF%BE%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>网络安全与检测技术学习笔记丨02</title>
      <link>http://localhost:1313/posts/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%A802/</link>
      <pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%A802/</guid>
      <description>&lt;h2 id=&#34;lec04-symmetric-key-cryptography&#34;&gt;Lec04 Symmetric Key Cryptography&lt;/h2&gt;&#xA;&lt;h3 id=&#34;how-to-use-a-block-cipher&#34;&gt;How to use a block cipher?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分组密码加密固定大小的块&#xA;&lt;ul&gt;&#xA;&lt;li&gt;例如，DES 加密 64 位块，AES 加密 128 位块&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;用某种方法来加密任意长度的消息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我们如何使用 AES 加密 256 位消息？&lt;/p&gt;&#xA;&lt;p&gt;我们可以使用 AES 两次！避免像 one-time pads 这样的情况，需要很长的键。&lt;/p&gt;&#xA;&lt;h3 id=&#34;modes-of-operation&#34;&gt;Modes of Operation&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;电子密码簿模式 （ECB）Electronic Codebook Mode&lt;/li&gt;&#xA;&lt;li&gt;密码块链接模式 （CBC）Cipher Block Chaining Mode&lt;/li&gt;&#xA;&lt;li&gt;输出反馈模式 （OFB）Output Feedback Mode&lt;/li&gt;&#xA;&lt;li&gt;密码反馈模式 （CFB）Cipher Feedback Mode&lt;/li&gt;&#xA;&lt;li&gt;计数器模式 （CTR）Counter Mode&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;electronic-code-book-ecb&#34;&gt;Electronic Code Book (ECB)&lt;/h4&gt;&#xA;&lt;p&gt;我们刚刚就设计了一个 ECB 模式。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;最简单模式&lt;/li&gt;&#xA;&lt;li&gt;明文一次处理 b 位&lt;/li&gt;&#xA;&lt;li&gt;每个块都使用相同的密钥进行加密&lt;/li&gt;&#xA;&lt;li&gt;对于给定的密钥，每个 b 位纯文本块都有一个唯一的密文&lt;/li&gt;&#xA;&lt;li&gt;每个 b 明文位块都使用相同的密钥独立编码&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;AES-ECB 不是 IND-CPA 安全的。为什么？&lt;/p&gt;</description>
    </item>
    <item>
      <title>网络安全与检测技术作业丨01</title>
      <link>http://localhost:1313/posts/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E4%BD%9C%E4%B8%9A%E4%B8%A801/</link>
      <pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E4%BD%9C%E4%B8%9A%E4%B8%A801/</guid>
      <description>&lt;h2 id=&#34;题目&#34;&gt;题目&lt;/h2&gt;&#xA;&lt;p&gt;作业的内容是&lt;a style=&#34;color: #0000FF;&#34; href=&#34;网络安全与检测技术作业 1.pdf&#34; target=&#34;_blank&#34;&gt;网络安全与检测技术 作业 1&lt;/a&gt;，其中第八题的内容是：&lt;/p&gt;&#xA;&lt;img src=&#34;8.png&#34; /&gt;&#xD;&#xA;&lt;h2 id=&#34;我的答案&#34;&gt;我的答案&lt;/h2&gt;&#xA;&lt;p&gt;1.(1)Mi=Dk(Ci⊕Ci−1)⊕Ci-1&lt;/p&gt;&#xA;&lt;p&gt;(2)在AES-CBS-STAR模式中，每个密文分组Ci依赖于前一个密文分组Ci−1，即加密过程是串行的，无法进行并行化。&lt;/p&gt;&#xA;&lt;p&gt;解密过程中Mi的计算也依赖于前一个密文分组Ci−1，因此，解密过程也是串行的。&lt;/p&gt;&#xA;&lt;p&gt;所以AES-CBS-STAR模式既不能并行加密，也不能并行解密。&lt;/p&gt;&#xA;&lt;p&gt;(3)由于C0=IV0是已知的，对手能够根据选择的明文和已知的IV，推测出初始密文分组C1或其他分组。然后攻击者可以分析密文序列中的变化趋势，利用IV的已知值推断出明文。&lt;/p&gt;&#xA;&lt;p&gt;2.(1)在ECB模式中，每个分组的加密是独立的，只会影响第8个明文分组的第17比特。&lt;/p&gt;&#xA;&lt;p&gt;(2)CTR模式的密文模块之间是独立的，因此一个密文模块的污染只会影响相应的明文模块。第2和第3个明文分组都将被污染。&lt;/p&gt;&#xA;&lt;p&gt;(3)OFB模式中,密文生成是通过明文与一个伪随机序列进行异或来完成的,密文模块之间是独立的，只会影响第7个明文分组。&lt;/p&gt;&#xA;&lt;p&gt;(4)CBC模式中，每个明文分组与前一个密文分组进行异或操作,会影响当前分组的解密结果和下一个分组的解密结果。会影响第9个明文分组的第16和第17比特，以及第10个明文分组的第16和第17比特。&lt;/p&gt;&#xA;&lt;p&gt;(5)CFB模式中，密文是通过明文与来自加密器输出的前几个比特进行异或来生成的。会影响第12个明文分组的第3到第6比特，以及以后所有明文分组的所有比特。&lt;/p&gt;&#xA;&lt;p&gt;3.这种方法与RSA不等价在RSA中，e（相当于这里的E）的选择是有一定条件的，通常要求e与(P-1)(Q-1)互质，这样才能保证解密的唯一性和正确性。而这里不满足RSA中的选择条件，解密指数D未必存在，或者可能存在多个解，无法保证解密过程的正确性。所以该方法不是RSA算法。&lt;/p&gt;&#xA;&lt;p&gt;4.假设我们希望找到一对新的分组C1和C2，使得：&lt;/p&gt;&#xA;&lt;p&gt;RSAH(C1,C2)=RSAH(B1,B2)即&lt;/p&gt;&#xA;&lt;p&gt;RSA(E(C1)⊕C2)=RSA(E(B1)⊕B2)&lt;/p&gt;&#xA;&lt;p&gt;由于RSA是一个可逆操作，给定密文，我们可以通过逆向操作（即RSA解密）得到对应的明文。因此，如果我们有密文E(B1)⊕B2，我们可以通过适当选择C1和C2来调整这个结果，使其匹配。&lt;/p&gt;&#xA;&lt;p&gt;我们可以选择：&lt;/p&gt;&#xA;&lt;p&gt;C2=B2⊕(E(C1)⊕E(B1))这样，RSA(C1,C2)就会与RSA(B1,B2)相同。因此，该Hash函数是不安全的，它不满足抗弱碰撞性。&lt;/p&gt;&#xA;&lt;p&gt;5.攻击者可以利用逐字节比较的特性，通过逐字节猜测sig_bytes的正确值。在每次对比时，比较操作会在不匹配的字节处提前结束。可以通过监控每次比较的时间差来判断哪些字节匹配。通常，匹配的字节会导致较长的比较时间（因为继续进行字节比较），而不匹配的字节会导致较短的比较时间。利用这个反馈信息，攻击者就可以逐步恢复正确的签名。&lt;/p&gt;&#xA;&lt;p&gt;我们可以使用常数时间比较：&lt;/p&gt;&#xA;&lt;p&gt;importhmac&lt;/p&gt;&#xA;&lt;p&gt;defverify(key,msg,sig_bytes):&lt;/p&gt;&#xA;&lt;p&gt;returnhmac.compare_digest(HMAC(key,msg),sig_bytes)&lt;/p&gt;&#xA;&lt;p&gt;6.(1)Bob能解密密文c并获得明文m的条件是密文c中包含了可以通过对称加密解密或通过私钥解签名获得的明文。&lt;/p&gt;&#xA;&lt;p&gt;(a)这种方式使用了哈希函数对密文Enc(K,m)进行哈希计算。哈希函数是单向的，Bob无法获得明文m，&lt;/p&gt;&#xA;&lt;p&gt;(b)中，c1是通过对称加密得到的密文，Bob使用对称密钥K可以解密c1得到m。c2只是Enc(K,m)的哈希，Bob不需要它来获取明文m。(c)中c1是加密后的密文，Bob可以使用K解密得到m，c2是对m的MAC（消息认证码），它主要用于验证消息的完整性。&lt;/p&gt;&#xA;&lt;p&gt;(d)中c1是加密的密文，Bob可以解密它得到m。c2是对加密后密文的MAC，用于完整性验证。&lt;/p&gt;&#xA;&lt;p&gt;(e)这里，c是Alice使用私钥SKA对加密消息Enc(K,m)的签名。Bob可以使用Alice的公钥PKA来验证签名，然后Bob可以根据对称密钥K解密Enc(K,m)。&lt;/p&gt;&#xA;&lt;p&gt;(f)中c1是加密后的明文m，Bob使用K解密得到m。c2是对明文m的签名（加密过），Bob可以解密c2并验证签名，但这不会影响c1中的解密过程。&lt;/p&gt;&#xA;&lt;p&gt;Bob能解密c获得明文m的方式是(b)、(c)、(d)、(e)、(f)。&lt;/p&gt;&#xA;&lt;p&gt;(2) (a)是通过哈希函数对密文进行处理，而哈希函数本身是单向的，不涉及加密，所以不能提供机密性保护。&lt;/p&gt;&#xA;&lt;p&gt;(b)是对称加密的密文，提供了机密性保护，可以提供机密性保护。&lt;/p&gt;&#xA;&lt;p&gt;(c)是对称加密的密文，可以提供机密性保护。&lt;/p&gt;&#xA;&lt;p&gt;(d)是对称加密的密文，可以提供机密性保护。&lt;/p&gt;&#xA;&lt;p&gt;(e)是加密的密文，提供了机密性保护，可以提供机密性保护。&lt;/p&gt;&#xA;&lt;p&gt;(f)是对称加密的密文，可以提供机密性保护。&lt;/p&gt;&#xA;&lt;p&gt;可以提供机密性保护的方式是(b)、(c)、(d)、(e)、(f)。&lt;/p&gt;&#xA;&lt;p&gt;(3) (a)只能提供单向验证，但不能验证消息是否在传输中被篡改，不能提供完整性保护。&lt;/p&gt;&#xA;&lt;p&gt;(b)中c2是Enc(K,m)的哈希值，可以用于验证密文是否被篡改，因此可以提供完整性保护。&lt;/p&gt;&#xA;&lt;p&gt;(c)中c2是对消息m的MAC，可以验证消息的完整性，因此可以提供完整性保护。&lt;/p&gt;&#xA;&lt;p&gt;(d)中c2是对密文Enc(K,m)的MAC，可以验证密文是否被篡改，因此可以提供完整性保护。&lt;/p&gt;&#xA;&lt;p&gt;(e)Sign(SKA,Enc(K,m))是对密文的签名，可以验证密文是否被篡改，因此可以提供完整性保护。&lt;/p&gt;&#xA;&lt;p&gt;(f)中c2是对明文m的签名的加密，可以用于验证消息的完整性，因此可以提供完整性保护。&lt;/p&gt;&#xA;&lt;p&gt;可以提供完整性保护的方式是(b)、(c)、(d)、(e)、(f)。&lt;/p&gt;&#xA;&lt;p&gt;(4)选择方式(c)：c=c1,c2:c1=Enc(K,m),c2=MAC(K,m)，它同时提供了机密性和完整性保护。为了防止重放攻击，我们可以在消息中添加时间戳或唯一的随机数nonce。&lt;/p&gt;&#xA;&lt;p&gt;7.(1)一种可能的攻击角度是伪造人脸图像进行攻击，即通过技术手段制造或操控一个与目标人物极为相似的面部图像或视频，从而欺骗门禁系统，绕过人脸识别机制进入系统。具体攻击方法可能包括以下几种：&lt;/p&gt;&#xA;&lt;p&gt;照片攻击：使用目标用户的照片，将其展示给门禁系统的摄像头来欺骗系统。&lt;/p&gt;&#xA;&lt;p&gt;视频攻击：通过录制目标用户的正常活动（例如走路、说话等），再通过播放视频来进行攻击，模拟目标的面部动态。&lt;/p&gt;&#xA;&lt;p&gt;3D模型攻击：通过3D打印技术制造出目标人物的面部模型，并将其放置在摄像头前，试图欺骗识别系统。&lt;/p&gt;&#xA;&lt;p&gt;深度学习攻击：利用深度学习技术生成目标人物的虚假面部图像或视频，进行欺骗。&lt;/p&gt;&#xA;&lt;p&gt;威胁模型：&lt;/p&gt;&#xA;&lt;p&gt;资产：门禁后的区域安全、生物识别数据、门禁系统完整性。&lt;/p&gt;&#xA;&lt;p&gt;对手：外部无通行权限的攻击者，获取门禁后的被保护的东西&lt;/p&gt;&#xA;&lt;p&gt;漏洞：识别技术不精确、缺乏活体检测、数据传输不加密。&lt;/p&gt;&#xA;&lt;p&gt;威胁：伪造身份、深度伪造、数据截获。&lt;/p&gt;&#xA;&lt;p&gt;风险：高价值区域和用户数据泄露，漏洞可能性较大。&lt;/p&gt;&#xA;&lt;p&gt;防御：活体检测、多因素认证、加密传输。&lt;/p&gt;&#xA;&lt;p&gt;(2)安全性质：&lt;/p&gt;&#xA;&lt;p&gt;KnowYourThreatModel：&#xA;确定潜在威胁和攻击者，包括外部黑客、内部员工、以及中间人。了解攻击者的动机、能力和目标。&lt;/p&gt;&#xA;&lt;p&gt;SecurityisEconomics：&#xA;评估安全防护的成本和攻击的潜在损失，确保在合理的成本范围内实现最佳安全效果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>网络安全与检测技术学习笔记丨01</title>
      <link>http://localhost:1313/posts/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%A801/</link>
      <pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%A801/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;这次学习是因为该课程布置了第一次作业，所以需要补充学习一下遗漏的内容。由于这门课是本研共修课程，在开学第一周本科生们就已经选好课并且开始上课了，但是我们新入学的研究生从第三周才能选好课并开始上课。这导致我最终其实第四周左右才选上这门课，所以遗漏了前面的很多内容，上课时感到很不连贯也就没有细听了，最终决定采用根据PPT自学的形式来完成这次布置的第一次作业。&lt;/p&gt;&#xA;&lt;h2 id=&#34;lec01-intro&#34;&gt;Lec01 Intro&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Ethics&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通常可以闯入自己的系统&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这是评估自己系统的好办法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;在获得他人明确许可的情况下，通常可以闯入他人的系统&lt;/li&gt;&#xA;&lt;li&gt;未经许可闯入他人的系统是不道德且犯罪的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;系统失效的原因：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reliability：意外故障&lt;/li&gt;&#xA;&lt;li&gt;Usability：因用户操作错误而引起的问题&lt;/li&gt;&#xA;&lt;li&gt;Design and goal oversights：设计过程中的疏忽、错误和遗漏&lt;/li&gt;&#xA;&lt;li&gt;Security：他人故意造成的故障&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Security VS. Correctness：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;System correctness：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统满足规范&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;对于合理输入，获得合理输出&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;System security：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在面对攻击时保留系统属性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;对于不合理的的输入，输出不完全错误&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;主要区别：主动干扰&lt;/p&gt;&#xA;&lt;p&gt;Course Overview&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如何考虑安全和隐私&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“Security Mind” ——一种思考系统的全新方式&lt;/li&gt;&#xA;&lt;li&gt;Security Principles&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;安全和隐私的&lt;strong&gt;技术&lt;/strong&gt;方面&#xA;&lt;ul&gt;&#xA;&lt;li&gt;漏洞和攻击技术&lt;/li&gt;&#xA;&lt;li&gt;防御技术&lt;/li&gt;&#xA;&lt;li&gt;如何构建具有强大安全属性的计算机系统&lt;/li&gt;&#xA;&lt;li&gt;如何衡量当今技术提供的保护和限制&lt;/li&gt;&#xA;&lt;li&gt;攻击在实践中的工作原理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;主题包括&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基本密码学&lt;/li&gt;&#xA;&lt;li&gt;认证&lt;/li&gt;&#xA;&lt;li&gt;密钥管理&lt;/li&gt;&#xA;&lt;li&gt;可用安全性（人工身份验证）&lt;/li&gt;&#xA;&lt;li&gt;网络安全&lt;/li&gt;&#xA;&lt;li&gt;数据安全和隐私&#xA;&lt;ul&gt;&#xA;&lt;li&gt;匿名和差分隐私&lt;/li&gt;&#xA;&lt;li&gt;联邦学习&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Emerging Technologies 的安全&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ML的安全性&lt;/li&gt;&#xA;&lt;li&gt;自动驾驶汽车的安全性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;lec02-secbasics&#34;&gt;Lec02 SecBasics&lt;/h2&gt;&#xA;&lt;h3 id=&#34;objects&#34;&gt;Objects&lt;/h3&gt;&#xA;&lt;h4 id=&#34;confidentiality保密性&#34;&gt;Confidentiality（保密性）&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Confidentiality 是信息的隐瞒&lt;/li&gt;&#xA;&lt;li&gt;Data Confidentiality：确保私人或机密信息不会提供给或披露给未经授权的个人&lt;/li&gt;&#xA;&lt;li&gt;&lt;font color=gray&gt;Privacy：确保个人控制或影响哪些和他们有关的信息被收集，以及这些信息会被谁以及向谁披露&lt;/font&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;integrity完整性&#34;&gt;Integrity（完整性）&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Integrity 是防止未经授权的更改&lt;/li&gt;&#xA;&lt;li&gt;Data Integrity：确保数据和信息仅以指定和授权的方式进行更改&lt;/li&gt;&#xA;&lt;li&gt;System Integrity：确保系统以不受损害的方式执行预期功能，不受故意或无意的未经授权的操作对系统执行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;availability可用性&#34;&gt;Availability（可用性）&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Availability 是使用信息或资源的能力&lt;/li&gt;&#xA;&lt;li&gt;确保系统迅速工作，并且不会拒绝向授权用户提供服务&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;thread-modeling&#34;&gt;Thread Modeling&lt;/h3&gt;&#xA;&lt;p&gt;Assets：我们要保护什么？这个资产有多少价值？&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
